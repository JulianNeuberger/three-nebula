// Primitives
export const DEFAULT_MAX_PARTICLES = 10000;
export const VECTOR_3_SIZE = ['x', 'y', 'z'].length;
export const RGBA_SIZE = ['r', 'g', 'b', 'a'].length;
export const FLOAT_BYTE_SIZE = 4; // Byte sizes

export const POSITION_BYTE_SIZE = VECTOR_3_SIZE * FLOAT_BYTE_SIZE;
export const ROTATION_BYTE_SIZE = FLOAT_BYTE_SIZE;
export const SIZE_BYTE_SIZE = FLOAT_BYTE_SIZE;
export const RGBA_BYTE_SIZE = RGBA_SIZE * FLOAT_BYTE_SIZE;
export const ALL_BYTE_SIZES = [POSITION_BYTE_SIZE, ROTATION_BYTE_SIZE, SIZE_BYTE_SIZE, RGBA_BYTE_SIZE];
export const PARTICLE_BYTE_SIZE = ALL_BYTE_SIZES.reduce((cur, acc) => cur + acc); // Attributes

export const POSITION_ATTRIBUTE_BUFFER_SIZE = VECTOR_3_SIZE;
export const ROTATION_ATTRIBUTE_BUFFER_SIZE = 1;
export const SIZE_ATTRIBUTE_BUFFER_SIZE = 1;
export const RGBA_ATTRIBUTE_BUFFER_SIZE = RGBA_SIZE;
export const ALPHA_ATTRIBUTE_BUFFER_SIZE = 1;
export const TEXID_ATTRIBUTE_BUFFER_SIZE = 2;
export const ATTRIBUTE_TO_SIZE_MAP = {
  position: POSITION_ATTRIBUTE_BUFFER_SIZE,
  rotation: ROTATION_ATTRIBUTE_BUFFER_SIZE,
  size: SIZE_ATTRIBUTE_BUFFER_SIZE,
  // THREE.Color does not contain alpha, so we will have separate attributes for these
  color: RGBA_ATTRIBUTE_BUFFER_SIZE,
  alpha: ALPHA_ATTRIBUTE_BUFFER_SIZE,
  texID: TEXID_ATTRIBUTE_BUFFER_SIZE
};
export const PARTICLE_STRIDE = [POSITION_ATTRIBUTE_BUFFER_SIZE, ROTATION_ATTRIBUTE_BUFFER_SIZE, SIZE_ATTRIBUTE_BUFFER_SIZE, RGBA_ATTRIBUTE_BUFFER_SIZE, ALPHA_ATTRIBUTE_BUFFER_SIZE, TEXID_ATTRIBUTE_BUFFER_SIZE].reduce((cur, acc) => cur + acc);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yZW5kZXJlci9HUFVSZW5kZXJlci9jb21tb24vUGFydGljbGVCdWZmZXIvY29uc3RhbnRzLmpzIl0sIm5hbWVzIjpbIkRFRkFVTFRfTUFYX1BBUlRJQ0xFUyIsIlZFQ1RPUl8zX1NJWkUiLCJsZW5ndGgiLCJSR0JBX1NJWkUiLCJGTE9BVF9CWVRFX1NJWkUiLCJQT1NJVElPTl9CWVRFX1NJWkUiLCJST1RBVElPTl9CWVRFX1NJWkUiLCJTSVpFX0JZVEVfU0laRSIsIlJHQkFfQllURV9TSVpFIiwiQUxMX0JZVEVfU0laRVMiLCJQQVJUSUNMRV9CWVRFX1NJWkUiLCJyZWR1Y2UiLCJjdXIiLCJhY2MiLCJQT1NJVElPTl9BVFRSSUJVVEVfQlVGRkVSX1NJWkUiLCJST1RBVElPTl9BVFRSSUJVVEVfQlVGRkVSX1NJWkUiLCJTSVpFX0FUVFJJQlVURV9CVUZGRVJfU0laRSIsIlJHQkFfQVRUUklCVVRFX0JVRkZFUl9TSVpFIiwiQUxQSEFfQVRUUklCVVRFX0JVRkZFUl9TSVpFIiwiVEVYSURfQVRUUklCVVRFX0JVRkZFUl9TSVpFIiwiQVRUUklCVVRFX1RPX1NJWkVfTUFQIiwicG9zaXRpb24iLCJyb3RhdGlvbiIsInNpemUiLCJjb2xvciIsImFscGhhIiwidGV4SUQiLCJQQVJUSUNMRV9TVFJJREUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsT0FBTyxNQUFNQSxxQkFBcUIsR0FBRyxLQUE5QjtBQUNQLE9BQU8sTUFBTUMsYUFBYSxHQUFHLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxHQUFYLEVBQWdCQyxNQUF0QztBQUNQLE9BQU8sTUFBTUMsU0FBUyxHQUFHLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxHQUFYLEVBQWdCLEdBQWhCLEVBQXFCRCxNQUF2QztBQUNQLE9BQU8sTUFBTUUsZUFBZSxHQUFHLENBQXhCLEMsQ0FFUDs7QUFDQSxPQUFPLE1BQU1DLGtCQUFrQixHQUFHSixhQUFhLEdBQUdHLGVBQTNDO0FBQ1AsT0FBTyxNQUFNRSxrQkFBa0IsR0FBR0YsZUFBM0I7QUFDUCxPQUFPLE1BQU1HLGNBQWMsR0FBR0gsZUFBdkI7QUFDUCxPQUFPLE1BQU1JLGNBQWMsR0FBR0wsU0FBUyxHQUFHQyxlQUFuQztBQUNQLE9BQU8sTUFBTUssY0FBYyxHQUFHLENBQzVCSixrQkFENEIsRUFFNUJDLGtCQUY0QixFQUc1QkMsY0FINEIsRUFJNUJDLGNBSjRCLENBQXZCO0FBTVAsT0FBTyxNQUFNRSxrQkFBa0IsR0FBR0QsY0FBYyxDQUFDRSxNQUFmLENBQ2hDLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjRCxHQUFHLEdBQUdDLEdBRFksQ0FBM0IsQyxDQUlQOztBQUNBLE9BQU8sTUFBTUMsOEJBQThCLEdBQUdiLGFBQXZDO0FBQ1AsT0FBTyxNQUFNYyw4QkFBOEIsR0FBRyxDQUF2QztBQUNQLE9BQU8sTUFBTUMsMEJBQTBCLEdBQUcsQ0FBbkM7QUFDUCxPQUFPLE1BQU1DLDBCQUEwQixHQUFHZCxTQUFuQztBQUNQLE9BQU8sTUFBTWUsMkJBQTJCLEdBQUcsQ0FBcEM7QUFDUCxPQUFPLE1BQU1DLDJCQUEyQixHQUFHLENBQXBDO0FBRVAsT0FBTyxNQUFNQyxxQkFBcUIsR0FBRztBQUNuQ0MsRUFBQUEsUUFBUSxFQUFFUCw4QkFEeUI7QUFFbkNRLEVBQUFBLFFBQVEsRUFBRVAsOEJBRnlCO0FBR25DUSxFQUFBQSxJQUFJLEVBQUVQLDBCQUg2QjtBQUluQztBQUNBUSxFQUFBQSxLQUFLLEVBQUVQLDBCQUw0QjtBQU1uQ1EsRUFBQUEsS0FBSyxFQUFFUCwyQkFONEI7QUFPbkNRLEVBQUFBLEtBQUssRUFBRVA7QUFQNEIsQ0FBOUI7QUFVUCxPQUFPLE1BQU1RLGVBQWUsR0FBRyxDQUM3QmIsOEJBRDZCLEVBRTdCQyw4QkFGNkIsRUFHN0JDLDBCQUg2QixFQUk3QkMsMEJBSjZCLEVBSzdCQywyQkFMNkIsRUFNN0JDLDJCQU42QixFQU83QlIsTUFQNkIsQ0FPdEIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWNELEdBQUcsR0FBR0MsR0FQRSxDQUF4QiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFByaW1pdGl2ZXNcclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfTUFYX1BBUlRJQ0xFUyA9IDEwMDAwO1xyXG5leHBvcnQgY29uc3QgVkVDVE9SXzNfU0laRSA9IFsneCcsICd5JywgJ3onXS5sZW5ndGg7XHJcbmV4cG9ydCBjb25zdCBSR0JBX1NJWkUgPSBbJ3InLCAnZycsICdiJywgJ2EnXS5sZW5ndGg7XHJcbmV4cG9ydCBjb25zdCBGTE9BVF9CWVRFX1NJWkUgPSA0O1xyXG5cclxuLy8gQnl0ZSBzaXplc1xyXG5leHBvcnQgY29uc3QgUE9TSVRJT05fQllURV9TSVpFID0gVkVDVE9SXzNfU0laRSAqIEZMT0FUX0JZVEVfU0laRTtcclxuZXhwb3J0IGNvbnN0IFJPVEFUSU9OX0JZVEVfU0laRSA9IEZMT0FUX0JZVEVfU0laRTtcclxuZXhwb3J0IGNvbnN0IFNJWkVfQllURV9TSVpFID0gRkxPQVRfQllURV9TSVpFO1xyXG5leHBvcnQgY29uc3QgUkdCQV9CWVRFX1NJWkUgPSBSR0JBX1NJWkUgKiBGTE9BVF9CWVRFX1NJWkU7XHJcbmV4cG9ydCBjb25zdCBBTExfQllURV9TSVpFUyA9IFtcclxuICBQT1NJVElPTl9CWVRFX1NJWkUsXHJcbiAgUk9UQVRJT05fQllURV9TSVpFLFxyXG4gIFNJWkVfQllURV9TSVpFLFxyXG4gIFJHQkFfQllURV9TSVpFLFxyXG5dO1xyXG5leHBvcnQgY29uc3QgUEFSVElDTEVfQllURV9TSVpFID0gQUxMX0JZVEVfU0laRVMucmVkdWNlKFxyXG4gIChjdXIsIGFjYykgPT4gY3VyICsgYWNjXHJcbik7XHJcblxyXG4vLyBBdHRyaWJ1dGVzXHJcbmV4cG9ydCBjb25zdCBQT1NJVElPTl9BVFRSSUJVVEVfQlVGRkVSX1NJWkUgPSBWRUNUT1JfM19TSVpFO1xyXG5leHBvcnQgY29uc3QgUk9UQVRJT05fQVRUUklCVVRFX0JVRkZFUl9TSVpFID0gMTtcclxuZXhwb3J0IGNvbnN0IFNJWkVfQVRUUklCVVRFX0JVRkZFUl9TSVpFID0gMTtcclxuZXhwb3J0IGNvbnN0IFJHQkFfQVRUUklCVVRFX0JVRkZFUl9TSVpFID0gUkdCQV9TSVpFO1xyXG5leHBvcnQgY29uc3QgQUxQSEFfQVRUUklCVVRFX0JVRkZFUl9TSVpFID0gMTtcclxuZXhwb3J0IGNvbnN0IFRFWElEX0FUVFJJQlVURV9CVUZGRVJfU0laRSA9IDI7XHJcblxyXG5leHBvcnQgY29uc3QgQVRUUklCVVRFX1RPX1NJWkVfTUFQID0ge1xyXG4gIHBvc2l0aW9uOiBQT1NJVElPTl9BVFRSSUJVVEVfQlVGRkVSX1NJWkUsXHJcbiAgcm90YXRpb246IFJPVEFUSU9OX0FUVFJJQlVURV9CVUZGRVJfU0laRSxcclxuICBzaXplOiBTSVpFX0FUVFJJQlVURV9CVUZGRVJfU0laRSxcclxuICAvLyBUSFJFRS5Db2xvciBkb2VzIG5vdCBjb250YWluIGFscGhhLCBzbyB3ZSB3aWxsIGhhdmUgc2VwYXJhdGUgYXR0cmlidXRlcyBmb3IgdGhlc2VcclxuICBjb2xvcjogUkdCQV9BVFRSSUJVVEVfQlVGRkVSX1NJWkUsXHJcbiAgYWxwaGE6IEFMUEhBX0FUVFJJQlVURV9CVUZGRVJfU0laRSxcclxuICB0ZXhJRDogVEVYSURfQVRUUklCVVRFX0JVRkZFUl9TSVpFLFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFBBUlRJQ0xFX1NUUklERSA9IFtcclxuICBQT1NJVElPTl9BVFRSSUJVVEVfQlVGRkVSX1NJWkUsXHJcbiAgUk9UQVRJT05fQVRUUklCVVRFX0JVRkZFUl9TSVpFLFxyXG4gIFNJWkVfQVRUUklCVVRFX0JVRkZFUl9TSVpFLFxyXG4gIFJHQkFfQVRUUklCVVRFX0JVRkZFUl9TSVpFLFxyXG4gIEFMUEhBX0FUVFJJQlVURV9CVUZGRVJfU0laRSxcclxuICBURVhJRF9BVFRSSUJVVEVfQlVGRkVSX1NJWkUsXHJcbl0ucmVkdWNlKChjdXIsIGFjYykgPT4gY3VyICsgYWNjKTtcclxuIl19